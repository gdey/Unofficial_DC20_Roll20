<div class="container">
	<div class="sheet-pc">
		{{!-- Character Information --}}
		<div class="header-pc">
			<div class="player">
				<span class="bold">Player Name</span>
				<input type="text" name="attr_playerName" placeholder="Enter Your Name">
			</div>
			<div class="name">
				<span class="bold">Character Name</span>
				<input type="text" name="attr_character_name" placeholder="Enter Your Character's Name">
			</div>
			<div class="class">
				<span class="bold">Class & Subclass</span>
				<input type="text" name="attr_class" placeholder="Class - Subclass">
			</div>
			<div class="ancestry">
				<span class="bold">Ancestry & Background</span>
				<input type="text" name="attr_ancestry" placeholder="Ancestry & Background">
			</div>
			<div class="level">
				<span class="bold">Level</span>
				<input type="number" name="attr_level" value="1" min="1">
			</div>
			<div class="cm">
				<span class="bold">Combat Mastery</span>
				<input type="text" name="attr_combatMastery" value="1" readonly>
			</div>
		</div>

		{{!-- Character Stats and Skills --}}
		<div class="stats">
			{{#each skillsList as |skills|}}
			{{#if @key}}
			{{#if (eq @key "might")}}
			<div class="physical">
				<span class="bold border-bottom">Physical {{{{noop}}}}<button type="roll" class="words"
						name="roll_physicalCheck"
						value="&{template:default} {{name=Physical Check}} {{roll=[[1d20+@{physicalCheck}]]}}">Check</button>{{{{/noop}}}}
					{{{{noop}}}}<button type="roll" class="words" name="roll_physicalSave"
						value="&{template:default} {{name=Physical Save}} {{roll=[[1d20+@{physicalSave}]]}}">Save</button>{{{{/noop}}}}</span>
				{{/if}}
				{{#if (eq @key "charisma")}}
				<div class="mystical">
					<span class="bold border-bottom">Mystical {{{{noop}}}}<button type="roll" class="words"
							name="roll_mysticalCheck"
							value="&{template:default} {{name=Mystical Check}} {{roll=[[1d20+@{mysticalCheck}]]}}">Check</button>{{{{/noop}}}}
						{{{{noop}}}}<button type="roll" class="words" name="roll_mysticalSave"
							value="&{template:default} {{name=Mystical Save}} {{roll=[[1d20+@{mysticalSave}]]}}">Save</button>{{{{/noop}}}}</span>
					{{/if}}
					<div class="{{@key}}">
						<div class="{{@key}}-stat">
							<span class="bold">{{truncate (uppercase @key) 3}}</span>
							<input type="number" name="attr_{{@key}}" value="-2" min="-2" />
						</div>
						<div class="{{@key}}-name">
							<span class="bold">{{capitalize @key}} {{{{noop}}}}<button type="roll"
									name="roll_{{{{/noop}}}}{{@key}}{{{{noop}}}}Check"
									value="&{template:default} {{name={{{{/noop}}}}{{capitalize @key}}{{{{noop}}}} Check}} {{roll=[[1d20+@&#123;{{{{/noop}}}}{{@key}}{{{{noop}}}}}]]}}"></button>{{{{/noop}}}}</span>
						</div>
						<div class="{{@key}}-save">
							<span class="bold">Save {{{{noop}}}}<button type="roll" name="roll_{{{{/noop}}}}{{@key}}{{{{noop}}}}Save"
									value="&{template:default} {{name={{{{/noop}}}}{{capitalize @key}}{{{{noop}}}} Save}} {{roll=[[1d20+@&#123;{{{{/noop}}}}{{@key}}{{{{noop}}}}Save}]]}}"></button>{{{{/noop}}}}</span>
							<input type="text" name="attr_{{@key}}Save" value="-2" readonly>
							<input type="checkbox" name="attr_{{@key}}SaveMastery" value="1" title="Save Mastery">
						</div>
						{{else}}
						<div class="prime">
							<div class="prime-stat">
								<input type="text" name="attr_prime" value="-2" readonly>
							</div>
							<div class="prime-name">
								<span class="bold">Prime</span>
							</div>
							{{/if}}
							{{#each skills as |skill|}}
							{{#if skill}}
							{{#if (eq @skill "arcana")}}
							<span class="knowledge">Knowledge</span>
							<div class="{{skill}}-skill border-top">
								<span class="bold">{{capitalize skill}}</span>
							</div>
							{{else}}
							<div class="{{skill}}-skill">
								<span class="bold">{{capitalize skill}} {{{{noop}}}}<button type="roll" class="smaller"
										name="roll_{{{{/noop}}}}{{skill}}{{{{noop}}}}Check"
										value="&{template:default} {{name={{{{/noop}}}}{{capitalize skill}}{{{{noop}}}} Check}} {{roll=[[1d20+@&#123;{{{{/noop}}}}{{skill}}{{{{noop}}}}}]]}}"></button>{{{{/noop}}}}</span>
							</div>
							{{/if}}
							{{#if (eq @skill "arcana")}}
							<div class="{{skill}}-masteries border-top">
								{{else}}
								<div class="{{skill}}-masteries">
									{{/if}}
									{{else}}
									<div class="skill{{@index}}-skill">
										<input type="text" name="attr_skill{{@index}}Name"><span>{{#if (eq @index 8)}}{{{{noop}}}}<button
												type="roll" class="smaller" name="roll_@{skill8Name}Check"
												value="&{template:default} {{name=@{skill8Name} Check}} {{roll=[[1d20+@{skill8}]]}}"></button>{{{{/noop}}}}{{else}}{{{{noop}}}}<button
												type="roll" class="smaller" name="roll_@{skill9Name}Check"
												value="&{template:default} {{name=@{skill9Name} Check}} {{roll=[[1d20+@{skill9}]]}}"></button>{{{{/noop}}}}{{/if}}</span>
									</div>
									<div class="skill{{@index}}-masteries">
										{{/if}}
										{{#each @root.masteries as |mastery|}}
										{{#if skill}}
										<input type="checkbox" name="attr_{{skill}}Mastery" value="{{mastery}}" title="{{capitalize @key}}">
										{{else}}
										<input type="checkbox" name="attr_skill{{@../index}}Mastery" value="{{mastery}}"
											title="{{capitalize @key}}">
										{{/if}}
										{{/each}}
									</div>
									{{#if skill}}
									{{#if (eq @skill "arcana")}}
									<div class="{{skill}}-value border-top">
										{{else}}
										<div class="{{skill}}-value">
											{{/if}}
											<input type="text" name="attr_{{skill}}" value="-2" readonly>
										</div>
										{{else}}
										<div class="skill{{@index}}-value">
											<input type="text" name="attr_skill{{@index}}" value="-2" readonly>
										</div>
										{{/if}}
										{{/each}}
									</div>
									{{#if (eq @key "agility")}}
								</div>
								{{/if}}
								{{#if (eq @key "intelligence")}}
							</div>
							{{/if}}
							{{/each}}
						</div>

						{{!-- Character Trades --}}
						<div class="trades">
							<span class="bold" style="margin-left: 104px;">Trades</span>
							<fieldset class="repeating_trade">
								<div class="flex">
									{{#each masteries}}
									<input type="checkbox" name="attr_tradeMastery" value="{{this}}" title="{{capitalize @key}}">
									{{/each}}
								</div>
								<input type="text" name="attr_tradeModifier" value="0" readonly>
								<select name="attr_tradeName">
									<option value="none" selected disabled>Choose</option>
									{{#each trades as |trade|}}
									<option>{{capitalize trade}}</option>
									{{/each}}
								</select>
								<select name="attr_tradeStat" class="stat">
									{{#each stats}}
									<option value="{{this}}">{{truncate (uppercase this) 3}}</option>
									{{/each}}
								</select>
								<span>{{{{noop}}}}<button type="roll" class="smaller" name="roll_@{skill8Name}Check"
										value="&{template:default} {{name=@{skill8Name} Check}} {{roll=[[1d20+@{skill8}]]}}"></button>{{{{/noop}}}}</span>
							</fieldset>
						</div>

						{{!-- Character Languages --}}
						<div class="languages">
							<span class="center bold">Languages {{{{noop}}}}<button type="roll" class="words"
									name="roll_languageCheck"
									value="&{template:default} {{name=Language Check}} {{roll=[[1d20+@{mysticalCheck}]]}}"
									style="width: 35px; height: 18px; margin-bottom: .5rem;">Check</button>{{{{/noop}}}}</span>
							<fieldset class="repeating_language">
								<select name="attr_languageName">
									<option value="none" selected disabled>Choose</option>
									{{#each language-lists as |list|}}
									<option disabled style="background: grey; font-weight: bold; color: white;">{{@key}}</option>
									{{#each list as |language|}}
									<option>{{titleize language}}</option>
									{{/each}}
									{{/each}}
								</select>
								{{#each language-masteries}}
								<input type="checkbox" name="attr_languageFluency" title="{{capitalize this}}" value="{{add @index 1}}">
								{{/each}}
							</fieldset>
						</div>

						{{!-- Character Combat Masteries --}}
						<div class="combat-masteries">
							<span class="bold center">Combat Masteries</span>
							<textarea name="attr_combatMasteries"></textarea>
						</div>

						{{!-- Character Currency --}}
						<div class="currency">
							<span class="bold center">Currency</span>
							<textarea name="attr_currency"></textarea>
						</div>

						{{!-- Character Stamina, Mana, Hit Points, and Temporary Hit Points --}}
						<div class="points">
							{{#each points}}
							<div class="section flex" style="width: 49px;">
								<span class="bold center">{{capitalize this}} Points</span>
								<input type="number" name="attr_{{this}}Points" value="0">
								<span class="bold">Max</span>
								<input type="number" name="attr_{{this}}Points_max" value="0" min="0">
								{{#if (eq this "hit")}}
								<span class="bold">Temp</span>
								<input type="number" name="attr_tempHitPoints" value="0">
								{{/if}}
							</div>
							{{/each}}
						</div>

						{{!-- Character Defenses --}}
						<div class="defenses">
							{{#each defenses}}
							<div class="section flex">
								<span class="bold">{{capitalize this}} Defense</span>
								<input type="text" name="attr_{{this}}Defense" value="0" readonly>
								<span class="bold">Heavy</span>
								<input type="text" name="attr_{{this}}Heavy" value="0" readonly>
								<span class="bold">Brutal</span>
								<input type="text" name="attr_{{this}}Brutal" value="0" readonly>
								{{#if (eq this "physical")}}
								<span class="bold">PDR</span>
								{{else}}
								<span class="bold">MDR</span>
								{{/if}}
								<input type="number" name="attr_{{this}}DamageReduction" value="0">
							</div>
							{{/each}}
						</div>

						{{!-- Character Combat Information --}}
						<div class="combat">
							<span class="center bold">Combat</span>
							<div>
								<span>Actions Points</span>
								<input type="checkbox" name="attr_ap1">
								<input type="checkbox" name="attr_ap2">
								<input type="checkbox" name="attr_ap3">
								<input type="checkbox" name="attr_ap4">
							</div>
							<div>
								<span>Minor Action Point</span>
								<input type="checkbox" name="attr_map">
							</div>
							<div>
								<span>Attack/Spell Check</span>
								<input type="text" name="attr_attackModifier" value="-1" readonly>
							</div>
						</div>

						{{!-- Character Attacks --}}
						<div class="attacks">
							<span class="center bold">Attacks</span>
							<div class="flex">
								<span class="bold">Name</span>
								<span class="bold" style="margin-left: 29px;">Damage</span>
								<span class="bold">Damage Type</span>
								<span class="bold">Roll</span>
							</div>
							<fieldset class="repeating_attack">
								<input type="text" name="attr_attackName" placeholder="Name">
								<input type="number" name="attr_attackDamage" value="0" min="0">
								<input type="text" name="attr_attackType" placeholder="Damage Type">
								{{{{noop}}}}<button type="roll" class="smaller" name="roll_attackCheck"
									value="&{template:default} {{name=@{attackName} Attack}} {{roll=[[1d20+@{prime}]]}}"></button>{{{{/noop}}}}
							</fieldset>
						</div>

						{{!-- Character Inventory --}}
						<div class="inventory">
							<span class="bold" style="margin-left: 74px;">Inventory</span>
							<div class="flex">
								<span class="bold">Name</span>
								<span class="bold" style="margin-left: 77px;">Quantity</span>
								<span class="bold" style="margin-left: 12px;">Weight</span>
							</div>
							<fieldset class="repeating_inventory">
								<input type="text" name="attr_inventoryName" placeholder="Name">
								<input type="number" name="attr_inventoryQuantity" value="1" min="1">
								<input type="number" name="attr_inventoryWeight" value="0" min="0">
							</fieldset>
						</div>

						{{!-- Character Death --}}
						<div class="death">
							<span class="center bold">Death {{{{noop}}}}<button type="roll" class="smaller" name="roll_deathSave"
									value="&{template:default} {{name=Death Save}} {{roll=[[1d20]]}}"></button>{{{{/noop}}}}</span>
							<div>
								<span>Exhaustion</span>
								<input type="hidden" name="attr_exhaustion" value="0">
								{{#each exhaustion}}
								<input type="checkbox" name="attr_exhaustion" value="{{this}}">
								{{/each}}
							</div>
							<div>
								<span>Death Threshold</span>
								<input type="text" name="attr_deathThreshold" value="0" readonly>
							</div>
						</div>

						{{!-- Move and Jump --}}
						<div class="move flex">
							<div class="flex">
								<span class="bold" style="width: 47px;">Move Speed</span>
								<input type="number" name="attr_move" value="0" min="0" style="margin-bottom: .5rem; margin-top: 6px;">
							</div>
							<div class="flex">
								<span class="bold" style="width: 61px;">Jump Distance</span>
								<input type="text" name="attr_jump" value="1" min="1" readonly style="margin-top: 6px;">
							</div>
						</div>

						{{!-- Resources --}}
						<div class="resources">
							<span class="center bold">Resources</span>
							<div class="flex">
								<span class="bold">Name</span>
								<span class="bold">Total</span>
								<span class="bold">Max</span>
							</div>
							<div class="flex">
								<span>Rest Points</span>
								<input type="number" name="attr_restPoints" value="0" min="0" style="margin-right: 2rem;">
								<input type="text" name="attr_restPoints_max" value="0" readonly>
							</div>
							<div class="flex">
								<span>Grit Points</span>
								<input type="number" name="attr_gritPoints" class="grit" value="0" min="0">
								<input type="text" name="attr_gritPoints_max" value="0" readonly>
							</div>
							<fieldset class="repeating_resource">
								<input type="text" name="attr_resourceName" placeholder="Name">
								<input type="number" name="attr_resource" value="0" min="0" style="margin-right: 3.95rem;">
								<input type="number" name="attr_resource_max" value="0">
							</fieldset>
						</div>

						{{!-- Character Features --}}
						<div class="features">
							<span class="bold" style="margin-left: 80px;">Features</span>
							<fieldset class="repeating_feature">
								<div class="flex">
									<input type="text" name="attr_featureName" placeholder="Name" style="margin-bottom: .5rem;">
									<textarea name="attr_featureInfo"></textarea>
								</div>
							</fieldset>
						</div>
					</div>
				</div>

				<script type="text/worker">
// COMBAT MASTERY and HIT POINTS
// When the level is changed, set the combat mastery
// When the level or might is changed, set the hit points
on("change:might change:level", () => {
	getAttrs(["level", "might"], values => {
		const level = +values.level || 0;
		const mastery = Math.ceil(level / 2);

		const might = +values.might || 0;
		const total = 6 + level + might;

		setAttrs({
			"combatMastery": mastery,
			"hitPoints_max": total
		});
	});
});

// STATS
// When the stats are changed, set the prime stat
on("change:might change:agility change:charisma change:intelligence", () => {
	getAttrs(["might", "agility", "charisma", "intelligence"], values => {
		const might = +values.might || 0;
		const agility = +values.agility || 0;
		const charisma = +values.charisma || 0;
		const intelligence = +values.intelligence || 0;
		const max = Math.max(might, agility, charisma, intelligence);
		const physical = Math.max(might, agility);
		const mystical = Math.max(charisma, intelligence);

		setAttrs({
			"prime": max,
			"physicalCheck": physical,
			"mysticalCheck": mystical
		});
	});
});

// SAVES
// When the stats or save mastery is changed, set the save modifier
{{#each stats as |stat|}}
on("change:{{stat}}SaveMastery change:{{stat}}", () => {
	getAttrs(["{{stat}}", "combatMastery", "{{stat}}SaveMastery"], values => {
		const stat = +values.{{stat}} || 0;
		const cm = +values.combatMastery || 0;
		const sm = +values.{{stat}}SaveMastery || 0;
		let total = stat;

		if (sm == 1) {
			total = stat + cm;
		}

		setAttrs({
			{{stat}}Save: total
		});
	});
});
{{/each}}

on("change:mightSave change:agilitySave change:charismaSave change:intelligenceSave", () => {
	getAttrs(["mightSave", "agilitySave", "charismaSave", "intelligenceSave"], values => {
		const might = +values.mightSave || 0;
		const agility = +values.agilitySave || 0;
		const charisma = +values.charismaSave || 0;
		const intelligence = +values.intelligenceSave || 0;
		const physical = Math.max(might, agility);
		const mystical = Math.max(charisma, intelligence);

		setAttrs({
			"physicalSave": physical,
			"mysticalSave": mystical
		});
	});
});

// SKILLS
// When the stats or skill mastery is changed, set the skill modifier
{{#each skillsList as |skills|}}
	{{#each skills as |skill|}}
		{{#if @../key }}
on("change:{{skill}}Mastery change:{{@../key}}", () => {
	getAttrs(["{{skill}}Mastery", "{{@../key}}"], values => {
		const stat = +values.{{@../key}} || 0;
		const mastery = +values.{{skill}}Mastery || 0;
		const total = stat + mastery;

		setAttrs({
			"{{skill}}": total
		});
	});
});
		{{else}}
on("change:{{skill}}Mastery change:prime", () => {
	getAttrs(["{{skill}}Mastery", "{{@../key}}"], values => {
		const stat = +values.prime || 0;
		const mastery = +values.{{skill}}Mastery || 0;
		const total = stat + mastery;

		setAttrs({
			"{{skill}}": total
		});
	});
});
		{{/if}}
	{{/each}}
{{/each}}

// When custom skill mastery or intelligence is changed, set the custom skill modifiers
on("change:skill8Mastery change:skill9Mastery change:intelligence", () => {
	getAttrs(["skill8Mastery", "skill9Mastery", "intelligence"], values => {
		const mastery8 = +values.skill8Mastery || 0;
		const mastery9 = +values.skill9Mastery || 0;
		const intelligence = +values.intelligence || 0;
		const total8 = intelligence + mastery8;
		const total9 = intelligence + mastery9;

		setAttrs({
			"skill8": total8,
			"skill9": total9
		});
	});
});

// TRADES
// When the stats are changed, set the trades modifiers
on("change:might change:agility change:charisma change:intelligence", () => {
	getSectionIDs('repeating_trade', ids => {
		const trades = [];

		ids.forEach(id => trades.push({"stat": `repeating_trade_${id}_tradeStat`, "mastery": `repeating_trade_${id}_tradeMastery`, "mod": `repeating_trade_${id}_tradeModifier`}));

		for(let i = 0; i < trades.length; i++) {
			getAttrs([trades[i].stat, trades[i].mastery, trades[i].mod, "might", "agility", "charisma", "intelligence"], values => {
				const stat = values[trades[i].stat];
				const might = +values.might || 0;
				const agility = +values.agility || 0;
				const charisma = +values.charisma || 0;
				const intelligence = +values.intelligence || 0;
				const mastery = +values[trades[i].mastery] || 0;
				const total = stat == "might" ? might + mastery : stat == "agility" ? agility + mastery : stat == "charisma" ? charisma + mastery : intelligence + mastery;

				setAttrs({
					[trades[i].mod]: total
				});
			});
		}
	});
});

// When the trade stat or mastery is changed, set the trade modifier
on("change:repeating_trade:tradeStat change:repeating_trade:tradeMastery", () => {
	getAttrs(["repeating_trade_tradeStat"], values => {
		const stat = values.repeating_trade_tradeStat;

		getAttrs(["repeating_trade_tradeMastery", stat], values => {
			const statMod = +values[stat] || 0;
			const mastery = +values.repeating_trade_tradeMastery || 0;
			const total = statMod + mastery;

			setAttrs({
				"repeating_trade_tradeModifier": total
			});
		});
	});
});

// ATTACKS
// When prime or combat mastery is changed, set the attack modifier
on("change:prime change:combatMastery", () => {
	getAttrs(["prime", "combatMastery"], values => {
		const prime = +values.prime || 0;
		const cm = +values.combatMastery || 0;
		const total = prime + cm;

		setAttrs({
			"attackModifier": total
		});
	});
});

// DEFENSES
// When agility, armor bonus, or combat mastery is changed, set the physical defenses
on("change:agility change:armorBonus change:combatMastery", () => {
	getAttrs(["agility", "armorBonus", "combatMastery"], values => {
		const agility = +values.agility || 0;
		const armorBonus = +values.armorBonus || 0;
		const cm = +values.combatMastery || 0;
		const total = 8 + cm + agility + armorBonus;

		setAttrs({
			"physicalDefense": total,
			"physicalHeavy": total + 5,
			"physicalBrutal": total + 10
		});
	});
});

// When charisma, intelligence, or combat mastery is changed, set the mystical defenses
on("change:charisma change:intelligence change:combatMastery", () => {
	getAttrs(["charisma", "intelligence", "combatMastery"], values => {
		const charisma = +values.charisma || 0;
		const intelligence = +values.intelligence || 0;
		const cm = +values.combatMastery || 0;
		const total = 8 + cm + charisma + intelligence;

		setAttrs({
			"mysticalDefense": total,
			"mysticalHeavy": total + 5,
			"mysticalBrutal": total + 10
		});
	});
});

//DEATH
// When the prime is changed, set the death threshold
on("change:prime", () => {
	getAttrs(["prime"], values => {
		const prime = +values.prime || 0;
		let total = prime * -1;

		if (prime < 0) {
			total = 0;
		}

		setAttrs({
			"deathThreshold": total
		});
	});
});

// JUMP
// When the agility stat is changed, set the jump distance
on("change:agility", () => {
	getAttrs(["agility"], values => {
		const agility = +values.agility || 0;
		let total = agility;

		if (agility < 0) {
			total = 1;
		}

		setAttrs({
			"jump": total
		});
	});
});

// RESOURCES
// When the might stat or level is changed, set the rest points
on("change:might change:level", () => {
	getAttrs(["might", "level"], values => {
		const might = +values.might || 0;
		const level = +values.level || 0;
		let total = level + might;

		if (total < 0) {
			total = 0;
		}

		setAttrs({
			"restPoints_max": total
		});
	});
});

// When the charisma stat is changed, set the grit points
on("change:charisma", () => {
	getAttrs(["charisma"], values => {
		const charisma = +values.charisma || 0;
		const total = charisma + 2;

		setAttrs({
			"gritPoints_max": total
		});
	});
});
</script>